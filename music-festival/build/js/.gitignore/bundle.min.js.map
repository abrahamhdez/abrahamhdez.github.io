{"version":3,"sources":["app.js","gallery.js"],"names":["fixedNav","navBar","document","querySelector","IntersectionObserver","entries","isIntersecting","classList","remove","add","observe","scrollNav","querySelectorAll","forEach","link","addEventListener","e","preventDefault","target","attributes","href","value","scrollIntoView","behavior","createGallery","gallery","i","img","createElement","src","dataset","imgId","onclick","showImg","list","appendChild","id","parseInt","overlay","btn","textContent","body"],"mappings":"AAMA,SAAAA,WACA,MAAAC,EAAAC,SAAAC,cAAA,WAEA,IAAAC,sBAAA,SAAAC,GACAA,EAAA,GAAAC,eACAL,EAAAM,UAAAC,OAAA,SAGAP,EAAAM,UAAAE,IAAA,YAKAC,QAAAR,SAAAC,cAAA,SAGA,SAAAQ,YACAT,SAAAU,iBAAA,kBAEAC,SAAA,SAAAC,GACAA,EAAAC,iBAAA,SAAA,SAAAC,GACAA,EAAAC,iBACAf,SAAAC,cAAAa,EAAAE,OAAAC,WAAAC,KAAAC,OAEAC,eAAA,CACAC,SAAA,iBC3BA,SAAAC,gBACA,MAAAC,EAAAvB,SAAAC,cAAA,kBAEA,IAAA,IAAAuB,EAAA,EAAAA,EAAA,GAAAA,IAAA,CACA,MAAAC,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,mBAAAH,SACAC,EAAAG,QAAAC,MAAAL,EACAC,EAAApB,UAAAE,IAAA,kBACAkB,EAAAK,QAAAC,QAEA,MAAAC,EAAAhC,SAAA0B,cAAA,MACAM,EAAAC,YAAAR,GACAF,EAAAU,YAAAD,IAIA,SAAAD,QAAAjB,GAEA,MAAAoB,EAAAC,SAAArB,EAAAE,OAAAY,QAAAC,OAGAJ,EAAAzB,SAAA0B,cAAA,OACAD,EAAAE,IAAA,oBAAAO,SAGA,MAAAE,EAAApC,SAAA0B,cAAA,OACAU,EAAAH,YAAAR,GACAW,EAAA/B,UAAAE,IAAA,mBAGA,MAAA8B,EAAArC,SAAA0B,cAAA,KACAW,EAAAC,YAAA,IACAD,EAAAhC,UAAAE,IAAA,aACA6B,EAAAH,YAAAI,GACAA,EAAAP,QAAA,WACAM,EAAA9B,SACAiC,EAAAlC,UAAAC,OAAA,eAIA,MAAAiC,EAAAvC,SAAAC,cAAA,QACAsC,EAAAN,YAAAG,GACAG,EAAAlC,UAAAE,IAAA,cD9CAP,SAAAa,iBAAA,oBAAA,WACAJ,YAEAX,cCHAE,SAAAa,iBAAA,oBAAA,WACAS","file":"bundle.min.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    scrollNav();\n\n    fixedNav();\n})\n\nfunction fixedNav() {\n    const navBar = document.querySelector('.header')\n\n    const observer = new IntersectionObserver( function (entries) {\n        if (entries[0].isIntersecting) {\n            navBar.classList.remove('fixed');\n        }\n        else {\n            navBar.classList.add('fixed');\n        }\n    })\n\n    // Element to observe\n    observer.observe(document.querySelector('main'));\n}\n\nfunction scrollNav() {\n    const links = document.querySelectorAll('.header__nav a');\n\n    links.forEach( function (link) {\n        link.addEventListener('click', function (e) {\n            e.preventDefault();\n            const section = document.querySelector(e.target.attributes.href.value);\n\n            section.scrollIntoView({\n                behavior: 'smooth'\n            })\n        })\n    })\n}\n\n\n","document.addEventListener('DOMContentLoaded', function() {\n    createGallery();\n});\n\nfunction createGallery() {\n    const gallery = document.querySelector('.gallery__list')\n\n    for (let i = 1; i < 13; i++) {\n        const img = document.createElement('IMG');\n        img.src = `build/img/thumb/${i}.webp`;\n        img.dataset.imgId = i;\n        img.classList.add('gallery__image')\n        img.onclick = showImg;\n\n        const list = document.createElement('LI')\n        list.appendChild(img)\n        gallery.appendChild(list)\n    }\n}\n\nfunction showImg(e){\n    \n    const id = parseInt(e.target.dataset.imgId)\n\n    // Generating image\n    const img = document.createElement('IMG');\n    img.src = `build/img/grande/${id}.webp`;\n\n    // Overlay\n    const overlay = document.createElement('DIV');\n    overlay.appendChild(img);\n    overlay.classList.add('overlay-gallery');\n\n    // Button\n    const btn = document.createElement('P');\n    btn.textContent = 'X';\n    btn.classList.add('btn-close');\n    overlay.appendChild(btn);\n    btn.onclick = function () {\n        overlay.remove();\n        body.classList.remove('body-fixed')\n    }\n\n    // Show HTML\n    const body = document.querySelector('body');\n    body.appendChild(overlay);\n    body.classList.add('body-fixed')\n\n}"]}